
FILE(GLOB SRCS *.cpp)
FILE(GLOB HDRS *.h)
IF (WIN32)
	FILE(GLOB SRCSFT ftlib/*.cpp)
	FILE(GLOB HDRSFT ftlib/*.h)
	FILE(GLOB RSRC *.rc)
ENDIF (WIN32)
FILE(GLOB RESOURCES *.qrc)

# Find the QtWidgets library
FIND_PACKAGE(Qt5Widgets)

# Instruct CMake to run moc automatically when needed.
SET(CMAKE_AUTOMOC ON)

QT5_ADD_RESOURCES(RESOURCE_ADDED ${RESOURCES})

ADD_EXECUTABLE(ft800editor WIN32
	${SRCS}
	${HDRS}
	${SRCSFT}
	${HDRSFT}
	${RSRC}
	${RESOURCE_ADDED}
	)

TARGET_LINK_LIBRARIES(ft800editor
	ft800emu
	)

IF (WITH_SDL2)
  ADD_DEFINITIONS(-DFT800EMU_SDL2)
ELSEIF (WITH_SDL)

  # SDL base package
  FIND_PACKAGE(SDL)
  IF (NOT SDL_FOUND)
    MESSAGE(FATAL_ERROR "SDL not found!")
  ENDIF (NOT SDL_FOUND)
  INCLUDE_DIRECTORIES(
    ${SDL_INCLUDE_DIR}
    )
  TARGET_LINK_LIBRARIES(ft800editor
    ${SDL_LIBRARY}
    )

  ADD_DEFINITIONS(-DFT800EMU_SDL)

ENDIF ()

IF (WITH_PYTHON)

  FIND_PACKAGE(PythonLibs REQUIRED)
  INCLUDE_DIRECTORIES(
    ${PYTHON_INCLUDE_DIRS}
    )
  TARGET_LINK_LIBRARIES(ft800editor
    ${PYTHON_LIBRARIES}
    )

  ADD_DEFINITIONS(-DFT800EMU_PYTHON)

  CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/export_gd2.py
    ${CMAKE_CURRENT_BINARY_DIR}/export_gd2.py COPYONLY)

  CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/export_eve_arduino.py
    ${CMAKE_CURRENT_BINARY_DIR}/export_eve_arduino.py COPYONLY)

  CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/export_ftdi_eve_hal.py
    ${CMAKE_CURRENT_BINARY_DIR}/export_ftdi_eve_hal.py COPYONLY)

  CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/img_cvt.py
    ${CMAKE_CURRENT_BINARY_DIR}/img_cvt.py COPYONLY)

  CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/png.py
    ${CMAKE_CURRENT_BINARY_DIR}/png.py COPYONLY)

  CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/pngp2pa.py
    ${CMAKE_CURRENT_BINARY_DIR}/pngp2pa.py COPYONLY)

  CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/raw_cvt.py
    ${CMAKE_CURRENT_BINARY_DIR}/raw_cvt.py COPYONLY)

ENDIF (WITH_PYTHON)

IF(WITH_FREETYPE)
  FIND_PACKAGE(Freetype REQUIRED)
  INCLUDE_DIRECTORIES(
    ${FREETYPE_INCLUDE_DIRS}
    )
  TARGET_LINK_LIBRARIES(ft800editor
    ${FREETYPE_LIBRARIES}
    )

  ADD_DEFINITIONS(-DFT800EMU_FREETYPE)
ENDIF(WITH_FREETYPE)

IF(FTEDITOR_TEMP_DIR)
  ADD_DEFINITIONS(-DFTEDITOR_TEMP_DIR)
ENDIF(FTEDITOR_TEMP_DIR)

IF (WIN32)
  TARGET_LINK_LIBRARIES(ft800editor
    Qt5::Widgets
    ${CMAKE_SOURCE_DIR}/ft800editor/ftlib/ftd2xx.lib
    ${CMAKE_SOURCE_DIR}/ft800editor/ftlib/libMPSSE.a
  )
ELSE (WIN32)
  TARGET_LINK_LIBRARIES(ft800editor
    Qt5::Widgets
  )
ENDIF (WIN32)

qt5_use_modules(ft800editor Widgets)

ADD_DEFINITIONS(-DFT800EMU_REFERENCE_DIR="${FT800_REFERENCE_DIR}")

