
FILE(GLOB SRCS *.cpp)
FILE(GLOB HDRS *.h)

ADD_LIBRARY(libft800emu
	${SRCS}
	${HDRS}
	)

IF (MINGW)
  TARGET_LINK_LIBRARIES(libft800emu
    gomp dinput8 dxguid)
ELSE (MINGW)
  TARGET_LINK_LIBRARIES(libft800emu
    )
ENDIF (MINGW)

IF (WITH_SDL2)
  TARGET_LINK_LIBRARIES(libft800emu
    ${SDL2_LIBRARY}
    )
  ADD_DEFINITIONS(-DFT800EMU_SDL2)
ELSEIF (WITH_SDL)
  # SDL base package
  FIND_PACKAGE(SDL REQUIRED)
  if (NOT SDL_FOUND)
    message(FATAL_ERROR "SDL not found!")
  endif (NOT SDL_FOUND)
  include_directories(
    ${SDL_INCLUDE_DIR}
    )
  target_link_libraries(libft800emu
    ${SDL_LIBRARY}
    )
  ADD_DEFINITIONS(-DFT800EMU_SDL)
ELSE ()
  FIND_PACKAGE(OpenMP REQUIRED)
  if(OPENMP_FOUND)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
  endif()
ENDIF ()

option (USE_SSE_41 "Use SSE 4.1 instructions" OFF)

if (USE_SSE_41)

  if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
    SET(CMAKE_C_FLAGS "-msse4.1 ${CMAKE_C_FLAGS}" CACHE STRING "" FORCE)
    SET(CMAKE_CXX_FLAGS "-msse4.1 ${CMAKE_CXX_FLAGS}" CACHE STRING "" FORCE)
  endif(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
  
  ADD_DEFINITIONS(-DFT800EMU_SSE41=1)

else (USE_SSE_41)

  ADD_DEFINITIONS(-DFT800EMU_SSE41=0)

endif (USE_SSE_41)

ADD_DEFINITIONS(-DFT800EMU_CMAKE)

