
FILE(GLOB SRCS *.cpp)
FILE(GLOB HDRS *.h)
FILE(GLOB SRCSFT ftlib/*.cpp)
FILE(GLOB HDRSFT ftlib/*.h)

# Instruct CMake to run moc automatically when needed.
SET(CMAKE_AUTOMOC ON)

ADD_EXECUTABLE(fteditor WIN32
	${SRCS}
	${HDRS}
	${SRCSFT}
	${HDRSFT}
	)

TARGET_LINK_LIBRARIES(fteditor
	libft800emu
	)

IF (WITH_SDL)

  # SDL base package
  FIND_PACKAGE(SDL)
  IF (NOT SDL_FOUND)
    MESSAGE(FATAL_ERROR "SDL not found!")
  ENDIF (NOT SDL_FOUND)
  INCLUDE_DIRECTORIES(
    ${SDL_INCLUDE_DIR}
    ${INCLUDE_DIRECTORIES}
    )
  TARGET_LINK_LIBRARIES(fteditor
    ${SDL_LIBRARY}
    ${TARGET_LINK_LIBRARIES}
    )

  SET(CMAKE_C_FLAGS "-DFT800EMU_SDL ${CMAKE_C_FLAGS}" CACHE STRING "" FORCE)
  SET(CMAKE_CXX_FLAGS "-DFT800EMU_SDL ${CMAKE_CXX_FLAGS}" CACHE STRING "" FORCE)

ENDIF (WITH_SDL)

IF (WITH_PYTHON)

  FIND_PACKAGE(PythonLibs REQUIRED)
  INCLUDE_DIRECTORIES(
    ${PYTHON_INCLUDE_DIRS}
    ${INCLUDE_DIRECTORIES}
    )
  TARGET_LINK_LIBRARIES(fteditor
    ${PYTHON_LIBRARIES}
    ${TARGET_LINK_LIBRARIES}
    )

  SET(CMAKE_C_FLAGS "-DFT800EMU_PYTHON ${CMAKE_C_FLAGS}" CACHE STRING "" FORCE)
  SET(CMAKE_CXX_FLAGS "-DFT800EMU_PYTHON ${CMAKE_CXX_FLAGS}" CACHE STRING "" FORCE)

  CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/export_gd2.py
    ${CMAKE_CURRENT_BINARY_DIR}/export_gd2.py COPYONLY)

  CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/img_cvt.pyc
    ${CMAKE_CURRENT_BINARY_DIR}/img_cvt.pyc COPYONLY)

  CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/raw_cvt.pyc
    ${CMAKE_CURRENT_BINARY_DIR}/raw_cvt.pyc COPYONLY)

ENDIF (WITH_PYTHON)

# Find the QtWidgets library
FIND_PACKAGE(Qt5Widgets)

TARGET_LINK_LIBRARIES(fteditor
  Qt5::Widgets
  ${TARGET_LINK_LIBRARIES}
  ${CMAKE_SOURCE_DIR}/editor/ftlib/ftd2xx.lib
  ${CMAKE_SOURCE_DIR}/editor/ftlib/libMPSSE.a
)

qt5_use_modules(fteditor Widgets)

ADD_DEFINITIONS(-DFT800EMU_REFERENCE_DIR="${FT800_REFERENCE_DIR}")

